set(CMAKE_PROJECT_MINIMUM_VERSION 3.20)
cmake_minimum_required(VERSION 3.20)

project(game
	VERSION 0.0.0
	LANGUAGES CXX
)

set(PROJECT_ACRONYM gm)
string(TOUPPER ${PROJECT_ACRONYM} PROJECT_ACRONYM_UPPERCASE)
set(PROJECT_CPP_DIALECT 23)

find_package(SDL2 CONFIG REQUIRED)
set(WSI_PROVIDER SDL2)
if (WIN32)
	function(CLONE_SDL2_DLL target)
		add_custom_command(
			TARGET ${target} POST_BUILD
			COMMAND ${CMAKE_COMMAND} -E copy_if_different
			$<TARGET_FILE:SDL2::SDL2>
			$<TARGET_FILE_DIR:${target}>
			VERBATIM)
	endfunction(CLONE_SDL2_DLL)
endif()

set(DEPS_INCLUDE_DIRS
	${SDL2_INCLUDE_DIRS}
)
set(DEPS_LIBRARIES ${SDL2_LIBRARIES})

message(${DEPS_INCLUDE_DIRS})
message(${DEPS_LIBRARIES})

if (WIN32)
	add_compile_definitions(${PROJECT_ACRONYM_UPPERCASE}_WINDOWS)
elseif (UNIX)
	add_compile_definitions(${PROJECT_ACRONYM_UPPERCASE}_LINUX)
elseif (APPLE)
	add_compile_definitions(${PROJECT_ACRONYM_UPPERCASE}_APPLE)
else()
	message(FATAL_ERROR "Platforms other than Windows, Linux and MacOS aren't supported for now")
endif()



set(SANDBOX_NAME ${PROJECT_NAME}_sandbox)
set(SANDBOX_VERSION ${PROJECT_VERSION})
set(SANDBOX_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(SANDBOX_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(SANDBOX_VERSION_PATCH ${PROJECT_VERSION_PATCH})
string(TOUPPER ${SANDBOX_NAME} SANDBOX_NAME_UPPERCASE)

add_compile_definitions(
	${SANDBOX_NAME_UPPERCASE}_NAME=${SANDBOX_NAME}
	${SANDBOX_NAME_UPPERCASE}_VERSION_MAJOR=${SANDBOX_VERSION_MAJOR}
	${SANDBOX_NAME_UPPERCASE}_VERSION_MINOR=${SANDBOX_VERSION_MINOR}
	${SANDBOX_NAME_UPPERCASE}_VERSION_PATCH=${SANDBOX_VERSION_PATCH}
)

include_directories(
	./include
	${DEPS_INCLUDE_DIRS}
)

file(GLOB_RECURSE SANDBOX_HEADER include/*.hpp)
file(GLOB_RECURSE SANDBOX_INLINE include/*.inl)
file(GLOB_RECURSE SANDBOX_SOURCE src/*.cpp)

add_executable(${SANDBOX_NAME} ${SANDBOX_HEADER} ${SANDBOX_INLINE} ${SANDBOX_SOURCE})
set_property(TARGET ${SANDBOX_NAME} PROPERTY CXX_STANDARD ${PROJECT_CPP_DIALECT})

target_link_libraries(
	${SANDBOX_NAME} PRIVATE ${DEPS_LIBRARIES}
)



if (WIN32)
	CLONE_SDL2_DLL(${SANDBOX_NAME})
endif()